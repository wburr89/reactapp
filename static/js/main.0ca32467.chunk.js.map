{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","value","onChange","e","setState","target","placeholder","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","console","log","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","images","map","key","id","App","onSearchSubmit","a","unsplash","get","params","query","per_page","response","data","results","marginTop","ReactDOM","render","document","getElementById"],"mappings":"yQAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,yCACTC,QAAS,CACPC,cACE,gFC2BSC,E,2MA7BbC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAAAC,GAGbA,EAAMC,iBAEN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,wEAGvB,IAAD,OACP,OACE,yBAAKM,UAAU,cACb,0BAAMD,SAAUE,KAAKN,aAAcK,UAAU,WAC3C,yBAAKA,UAAU,SACb,kEACA,2BACEE,KAAK,OACLC,MAAOF,KAAKR,MAAMC,KAClBU,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEZ,KAAMW,EAAEE,OAAOJ,SAC9CK,YAAY,6B,GAtBFC,IAAMC,WCkCfC,G,kBAjCb,WAAYb,GAAQ,IAAD,8BACjB,4CAAMA,KAWRc,SAAW,WACT,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAE/BC,EAAQC,KAAKC,KAAKN,EAAS,IAEjC,EAAKP,SAAS,CAAEW,WAdhB,EAAKxB,MAAQ,CAAEwB,MAAO,GAEtB,EAAKH,SAAWL,IAAMW,YALL,E,iFAQjBC,QAAQC,IAAIrB,KAAKa,UACjBb,KAAKa,SAASC,QAAQQ,iBAAiB,OAAQtB,KAAKW,Y,+BAW5C,IAAD,EACuBX,KAAKH,MAAM0B,MAAjCC,EADD,EACCA,YAAaC,EADd,EACcA,KACrB,OACE,yBACE1B,UAAU,WACV2B,MAAO,CAAEC,WAAW,QAAD,OAAU3B,KAAKR,MAAMwB,SAExC,yBAAKY,IAAK5B,KAAKa,SAAUgB,IAAKL,EAAaM,IAAKL,EAAKM,e,GA5BrCvB,IAAMC,YCUfuB,EARG,SAAAnC,GAChB,IAAMoC,EAASpC,EAAMoC,OAAOC,KAAI,SAAAX,GAC9B,OAAO,kBAAC,EAAD,CAAWY,IAAKZ,EAAMa,GAAIb,MAAOA,OAG1C,OAAO,yBAAKxB,UAAU,cAAckC,ICqBvBI,E,2MAxBb7C,MAAQ,CAAEyC,OAAQ,I,EAElBK,e,uCAAiB,WAAM7C,GAAN,eAAA8C,EAAA,sEACQC,EAASC,IAC9B,yCACA,CACEC,OAAQ,CAAEC,MAAOlD,EAAMmD,SAAU,MAJtB,OACTC,EADS,OAQf,EAAKxC,SAAS,CAAE4B,OAAQY,EAASC,KAAKC,UACtC3B,QAAQC,IAAIwB,GATG,2C,8HAaf,OACE,yBAAK9C,UAAU,eAAe2B,MAAO,CAAEsB,UAAW,SAChD,kBAAC,EAAD,CAAWlD,SAAUE,KAAKsC,iBAC1B,kBAAC,EAAD,CAAWL,OAAQjC,KAAKR,MAAMyC,c,GApBpBzB,IAAMC,WCAxBwC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0ca32467.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.unsplash.com/search/photos\",\r\n  headers: {\r\n    Authorization:\r\n      \"Client-ID 3337beecd7c05eea4e64d0278908a8b63bb880314dc26bf9fdd7c72cb2894974\"\r\n  }\r\n});\r\n","import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n  // Set state in input box\r\n  state = { term: \"\" };\r\n  // Automatically binds the value of \"this\", changed from default function to arrow function\r\n  onFormSubmit = event => {\r\n    // Stops form from submitting and refreshing the page;\r\n    // Arror function binds 'this' to SearchBar component\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui segment\">\r\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n          <div className=\"field\">\r\n            <h2>Find images for your next project!</h2>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.term}\r\n              onChange={e => this.setState({ term: e.target.value })}\r\n              placeholder=\"Enter search here\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nclass ImageCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { spans: 0 };\r\n\r\n    this.imageRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    console.log(this.imageRef);\r\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\r\n  }\r\n\r\n  setSpans = () => {\r\n    const height = this.imageRef.current.clientHeight;\r\n\r\n    const spans = Math.ceil(height / 10);\r\n\r\n    this.setState({ spans });\r\n  };\r\n\r\n  render() {\r\n    const { description, urls } = this.props.image;\r\n    return (\r\n      <div\r\n        className=\"img-card\"\r\n        style={{ gridRowEnd: `span ${this.state.spans}` }}\r\n      >\r\n        <img ref={this.imageRef} alt={description} src={urls.regular} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","import \"./ImageList.css\";\r\nimport ImageCard from \"./ImageCard\";\r\nimport React from \"react\";\r\n\r\nconst ImageList = props => {\r\n  const images = props.images.map(image => {\r\n    return <ImageCard key={image.id} image={image} />;\r\n  });\r\n\r\n  return <div className=\"image-list\">{images}</div>;\r\n};\r\n\r\nexport default ImageList;\r\n","import React from \"react\";\r\nimport unsplash from \"../api/unsplash\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport ImageList from \"./ImageList\";\r\nclass App extends React.Component {\r\n  // Expecting an array from api\r\n  state = { images: [] };\r\n\r\n  onSearchSubmit = async term => {\r\n    const response = await unsplash.get(\r\n      \"https://api.unsplash.com/search/photos\",\r\n      {\r\n        params: { query: term, per_page: 30 }\r\n      }\r\n    );\r\n    // Updates state with images from API\r\n    this.setState({ images: response.data.results });\r\n    console.log(response);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\" style={{ marginTop: \"20px\" }}>\r\n        <SearchBar onSubmit={this.onSearchSubmit} />\r\n        <ImageList images={this.state.images} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}